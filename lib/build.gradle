apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'me.tatarka.retrolambda'

def versionMajor = 0
def versionMinor = 3
def versionPatch = 2
def versionBuild = 0

def RX_IROHA_LIBRARY_VERSION = "${versionMajor}.${versionMinor}.${versionPatch}"

def gitSha() {
    def p = 'git rev-parse --short HEAD'.execute([], project.rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}

def gitTimestamp() {
    def p = 'git log -n 1 --format=%at'.execute([], rootDir)
    p.waitFor()
    if (p.exitValue() != 0) {
        throw new RuntimeException(p.errorStream.text)
    }

    return p.text.trim()
}

def isCi = 'true'.equals(System.getenv('CI'))
def preDexEnabled = 'true'.equals(System.getProperty('pre-dex', 'true'))

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.2"

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !isCi
    }
    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        versionCode versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100 + versionBuild
        versionName RX_IROHA_LIBRARY_VERSION
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        externalNativeBuild {
            cmake {
                cppFlags "-std=c++11"
            }
        }
        buildConfigField 'String', 'GIT_SHA', "\"${gitSha()}\""
        buildConfigField 'long', 'GIT_TIMESTAMP', "${gitTimestamp()}L"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }
    lintOptions {
        abortOnError false
    }
    aaptOptions {
        noCompress 'apk'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def SUPPORT_PACKAGE_VERSION = "25.1.1"
def ESPRESSO_PACKAGE_VERSION = "2.2.2"
def JUNIT_PACKAGE_VERSION = "4.12"
def OKHTTP_PACKAGE_VERSION = "3.5.0"
def GSON_PACKAGE_VERSION = "2.4"
def PLAY_SERVICES_VISION_PACKAGE_VERSION = "10.0.1"
def ZXING_PACKAGE_VERSION = "3.2.1"
def BOUNCY_CASTLE_PACKAGE_VERSION = "1.55"

def DAGGER_PACKAGE_VERSION = "2.9"
def RX_ANDROID_PACKAGE_VERSION = "2.0.1"
def RX_JAVA_PACKAGE_VERSION = "2.0.1"
def RETROFIT_PACKAGE_VERSION = "2.1.0"
def RETROFIT_RXJAVA2_ADAPTER_PACKAGE_VERSION = "1.0.0"

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile("com.android.support.test.espresso:espresso-core:${ESPRESSO_PACKAGE_VERSION}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testCompile("junit:junit:${JUNIT_PACKAGE_VERSION}", {
        exclude module: 'hamcrest-core'
    })
    testCompile "org.hamcrest:hamcrest-all:1.3"
    testCompile "org.mockito:mockito-core:2.7.5"
    testCompile "com.squareup.okhttp3:mockwebserver:${OKHTTP_PACKAGE_VERSION}"

    compile "com.android.support:appcompat-v7:${SUPPORT_PACKAGE_VERSION}"
    compile "com.squareup.okhttp3:okhttp:${OKHTTP_PACKAGE_VERSION}"
    compile "com.squareup.okhttp3:logging-interceptor:${OKHTTP_PACKAGE_VERSION}"
    compile "com.google.code.gson:gson:${GSON_PACKAGE_VERSION}"
    compile "com.google.android.gms:play-services-vision:${PLAY_SERVICES_VISION_PACKAGE_VERSION}"
    compile "com.google.zxing:core:${ZXING_PACKAGE_VERSION}"
    compile group: 'org.bouncycastle', name: 'bcprov-jdk15on', version: "${BOUNCY_CASTLE_PACKAGE_VERSION}"

    compile "com.google.dagger:dagger:${DAGGER_PACKAGE_VERSION}"
    annotationProcessor "com.google.dagger:dagger-compiler:${DAGGER_PACKAGE_VERSION}"
    compile "io.reactivex.rxjava2:rxandroid:${RX_ANDROID_PACKAGE_VERSION}"
    compile "io.reactivex.rxjava2:rxjava:${RX_JAVA_PACKAGE_VERSION}"
    compile "com.squareup.retrofit2:retrofit:${RETROFIT_PACKAGE_VERSION}"
    compile "com.squareup.retrofit2:converter-gson:${RETROFIT_PACKAGE_VERSION}"
    compile "com.jakewharton.retrofit:retrofit2-rxjava2-adapter:${RETROFIT_RXJAVA2_ADAPTER_PACKAGE_VERSION}"
}

publish {
    userOrg = 'kobaken0029'
    groupId = 'click.kobaken'
    artifactId = 'rx-iroha-android'
    publishVersion = RX_IROHA_LIBRARY_VERSION
    desc = 'Rx Ã— iroha-android'
    website = 'https://github.com/kobaken0029/RxIrohaAndroid'
}
